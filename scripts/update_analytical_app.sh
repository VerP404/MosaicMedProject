#!/bin/bash

# Определение лог-файла с временной меткой для текущего обновления
LOG_FILE="/tmp/update_analytical_app_$(date +'%Y%m%d_%H%M%S').log"

# Перенаправление STDOUT и STDERR
exec > >(tee -a "$LOG_FILE") 2>&1

echo "=============================================="
echo "Начало обновления аналитического приложения: $(date)"
echo "Лог обновления записывается в: $LOG_FILE"
echo "=============================================="

# Определение директории, в которой находится скрипт
echo "[INFO] Определяем директорию скрипта..."
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
echo "[INFO] SCRIPT_DIR = ${SCRIPT_DIR}"

# Переход в корневую директорию проекта
echo "[INFO] Переход в корневую директорию проекта..."
cd "$SCRIPT_DIR/.." || { echo "[ERROR] Не удалось перейти в корневую директорию!"; exit 1; }
echo "[INFO] Текущая директория: $(pwd)"

# Активация виртуального окружения
echo "[INFO] Активация виртуального окружения..."
source .venv/bin/activate
if [ $? -ne 0 ]; then
    echo "[ERROR] Не удалось активировать виртуальное окружение!"
    exit 1
fi

# Обновление кода
echo "[INFO] Обновление кода (git pull)..."
git pull
if [ $? -ne 0 ]; then
    echo "[ERROR] git pull завершился с ошибкой!"
    exit 1
else
    echo "[INFO] git pull выполнен успешно."
fi

# Остановка аналитического приложения
echo "[INFO] Остановка аналитического приложения..."
pkill -f 'python3.12 apps/analytical_app/index.py' 2>/dev/null
if [ $? -eq 0 ]; then
    echo "[INFO] Аналитическое приложение остановлено."
    # Небольшая пауза для завершения процесса
    sleep 2
else
    echo "[INFO] Аналитическое приложение не было запущено."
fi

# Перезапуск аналитического приложения в фоне
echo "[INFO] Запуск аналитического приложения..."
nohup python3.12 apps/analytical_app/index.py > /dev/null 2>&1 &

# Проверка успешного запуска
sleep 3
if pgrep -f 'python3.12 apps/analytical_app/index.py' > /dev/null; then
    echo "[INFO] Аналитическое приложение успешно запущено."
    echo "[INFO] Приложение доступно по адресу: http://0.0.0.0:5000/"
else
    echo "[ERROR] Не удалось запустить аналитическое приложение!"
    exit 1
fi

echo "=============================================="
echo "Обновление аналитического приложения завершено: $(date)"
echo "Лог сохранен в: $LOG_FILE"
echo "=============================================="
