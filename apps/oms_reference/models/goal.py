from datetime import datetime

from django.db import models

goal_data = {
    1: {"goal": '1',
        "goal_name": "Лечебно-диагностическая, включая получение справки (с диагнозом «здоров» (не более 2 пос. в поликлинике и 1 в женской консультации в 30 дней), c диагнозом «нездоров» (не более 1 посещения в 30 дней), ФАП)",
        "date_start": "2013-01-01", "date_end": None},
    2: {"goal": '2',
        "goal_name": "Консультативная (только для МО из приложения 1 к Тарифному соглашению) (не более 2 пос. в 30 дней)",
        "date_start": "2013-01-01", "date_end": None},
    3: {"goal": '3', "goal_name": "Диспансерное наблюдение отдельных категорий граждан", "date_start": "2023-01-01",
        "date_end": None},
    4: {"goal": '5',
        "goal_name": "Медико-социальная (оформление карты для санаторно-курортного лечения, оформление документации для медико-социальной экспертизы, медико-психологическое консультирование медицинским психологом)",
        "date_start": "2013-01-01", "date_end": None},
    5: {"goal": '7', "goal_name": "Проведение профпрививок", "date_start": "2013-01-01", "date_end": None},
    6: {"goal": '9', "goal_name": "Осмотр контактных", "date_start": "2013-01-01", "date_end": None},
    7: {"goal": '10',
        "goal_name": "Прочие (направление на госпитализацию, к другому специалисту, выписка рецепта, в т.ч. на очки)",
        "date_start": "2013-01-01", "date_end": None},
    8: {"goal": '13', "goal_name": "Первичное посещение в центр здоровья", "date_start": "2013-01-01", "date_end": None},
    9: {"goal": '14', "goal_name": "Повторное посещение в центр здоровья (первое)", "date_start": "2017-01-01",
        "date_end": None},
    10: {"goal": '140', "goal_name": "Повторное посещение в центр здоровья (второе и последующие)",
         "date_start": "2017-01-01", "date_end": None},
    11: {"goal": '15', "goal_name": "Первичное обращение в травматологический пункт", "date_start": "2013-01-01",
         "date_end": None},
    12: {"goal": '17', "goal_name": "Проведение гемодиализа (амбулаторным пациентам)", "date_start": "2013-01-01",
         "date_end": None},
    13: {"goal": '18', "goal_name": "Проведение перитонеального диализа", "date_start": "2013-01-01", "date_end": None},
    14: {"goal": '21',
         "goal_name": "Проведение ультразвукового исследования пренатальной диагностики нарушений развития ребенка в первом триместре беременности",
         "date_start": "2013-01-01", "date_end": None},
    15: {"goal": '22',
         "goal_name": "Посещение по неотложной медицинской помощи, оказанной службой неотложной помощи (пункт, кабинет, отделение), созданной на базе амбулаторно-поликлинической службы учреждения здравоохранения, в здравпункте, врачами-терапевтами участковыми, врачами-педиатрами участковыми, врачами общей практики, врачами-специалистами",
         "date_start": "2013-01-01", "date_end": None},
    16: {"goal": '26', "goal_name": "Вызов скорой медицинской помощи в неотложной форме", "date_start": "2013-01-01",
         "date_end": None},
    17: {"goal": '27', "goal_name": "Вызов скорой медицинской помощи в экстренной форме", "date_start": "2013-01-01",
         "date_end": None},
    18: {"goal": '28', "goal_name": "Вызов скорой медицинской помощи с проведением системного тромболизиса (алтеплаза)",
         "date_start": "2013-01-01", "date_end": None},
    19: {"goal": '29', "goal_name": "Вызов скорой медицинской помощи с проведением системного тромболизиса (тенектеплаза)",
         "date_start": "2013-01-01", "date_end": None},
    20: {"goal": '30', "goal_name": "Обращение по поводу заболевания", "date_start": "2013-01-01", "date_end": None},
    21: {"goal": '32',
         "goal_name": "Посещение консультативно-диагностических центров неприкрепленными застрахованными лицами",
         "date_start": "2013-01-01", "date_end": None},
    22: {"goal": '320', "goal_name": "Посещение центра амбулаторной онкологической помощи (прием онколога)",
         "date_start": "2020-01-01", "date_end": None},
    23: {"goal": '34',
         "goal_name": "Дистанционное предоставление заключения (описание, интерпретация) по данным выполненного исследования",
         "date_start": "2013-02-01", "date_end": None},
    24: {"goal": '340',
         "goal_name": "Дистанционное предоставление заключения (описание, интерпретация) по данным выполненного исследования 2 группы (КТ, МРТ с контрастированием)",
         "date_start": "2021-01-01", "date_end": None},
    25: {"goal": '52', "goal_name": "Оказание медицинской помощи в приемном отделении без последующей госпитализации",
         "date_start": "2014-01-01", "date_end": None},
    26: {"goal": '54', "goal_name": "Диагностические исследования", "date_start": "2015-01-01", "date_end": None},
    27: {"goal": '540', "goal_name": "Маммография цифровая", "date_start": "2020-01-01", "date_end": "2023-12-31"},
    28: {"goal": '541', "goal_name": "Диагностические исследования, для которых установлены отдельные нормативы",
         "date_start": "2020-01-01", "date_end": None},
    29: {"goal": '543',
         "goal_name": "Диагностические исследования, проводимые в рамках II этапа углубленной диспансеризации (для межучрежденческих взаиморасчетов)",
         "date_start": "2021-08-01", "date_end": None},
    30: {"goal": '301',
         "goal_name": "Диспансерное наблюдение женщин в период беременности (не более 7 обращений за весь период наблюдения)",
         "date_start": "2015-01-01", "date_end": None},
    31: {"goal": '55',
         "goal_name": "Дистанционное взаимодействие медицинских работников между собой в режиме реального времени",
         "date_start": "2015-01-01", "date_end": None},
    32: {"goal": '550',
         "goal_name": "Дистанционное взаимодействие медицинских работников между собой в режиме отсроченной консультации",
         "date_start": "2020-01-01", "date_end": None},
    33: {"goal": '551', "goal_name": "Дистанционный консилиум (с участием 2-3 специалистов)", "date_start": "2020-01-01",
         "date_end": None},
    34: {"goal": '56', "goal_name": "Лабораторные исследования", "date_start": "2015-05-01", "date_end": None},
    35: {"goal": '561', "goal_name": "Лабораторные исследования, для которых установлены отдельные нормативы",
         "date_start": "2020-01-01", "date_end": None},
    36: {"goal": '57',
         "goal_name": "Вызов скорой медицинской помощи с проведением токолитической терапии (препаратами атозибан)",
         "date_start": "2015-05-01", "date_end": None},
    37: {"goal": '58', "goal_name": "Вызов скорой медицинской помощи для реанимационных бригад", "date_start": "2015-05-01",
         "date_end": None},
    38: {"goal": '60', "goal_name": "Вызов скорой медицинской помощи с проведением системного тромболизиса (проурокиназа)",
         "date_start": "2016-01-01", "date_end": None},
    39: {"goal": '61',
         "goal_name": "При выездных формах работы на базе мобильных медицинских комплексов (мобильными медицинскими бригадами) (посещения)",
         "date_start": "2016-05-01", "date_end": None},
    40: {"goal": '610',
         "goal_name": "При выездных формах работы на базе мобильных медицинских комплексов (мобильными медицинскими бригадами) (обращения в связи с заболеваниями)",
         "date_start": "2019-05-01", "date_end": None},
    41: {"goal": '62',
         "goal_name": "Проведение ультразвукового исследования пренатальной диагностики нарушений развития ребенка во втором триместре беременности",
         "date_start": "2016-10-01", "date_end": None},
    42: {"goal": '63', "goal_name": "Диагностическая для консультативного приема", "date_start": "2017-01-01",
         "date_end": None},
    43: {"goal": '64', "goal_name": "Комплексная гериатрическая оценка пациентов старше 65 лет (первичное)",
         "date_start": "2017-01-01", "date_end": None},
    44: {"goal": '640', "goal_name": "Комплексная гериатрическая оценка пациентов старше 65 лет (повторное)",
         "date_start": "2017-01-01", "date_end": None},
    45: {"goal": '65',
         "goal_name": "Вызов скорой медицинской помощи с проведением системного тромболизиса (рекомбинантный белок, содержащий аминокислотную последовательность стафилокиназы)",
         "date_start": "2021-01-01", "date_end": None},
    46: {"goal": '305', "goal_name": "Диспансерное наблюдение лиц, состоящих на диспансерном учете",
         "date_start": "2023-01-01", "date_end": None},
    47: {"goal": '307', "goal_name": "Комплексное посещение школы сахарного диабета", "date_start": "2023-01-01",
         "date_end": None},
    48: {"goal": '562',
         "goal_name": "Проведение патолого-анатомических вскрытий пациентов, умерших в стационаре медицинских организаций, в которых отсутствует патолого-анатомическое отделение",
         "date_start": "2024-01-01", "date_end": None},
    49: {"goal": 'ДВ4', "goal_name": "Первый этап диспансеризации определенных групп взрослого населения",
         "date_start": "2020-01-01", "date_end": None},
    50: {"goal": 'ДВ2', "goal_name": "Второй этап диспансеризации определенных групп взрослого населения",
         "date_start": "2020-01-01", "date_end": None},
    51: {"goal": 'ОПВ', "goal_name": "Профилактические медицинские осмотры взрослого населения", "date_start": "2020-01-01",
         "date_end": None},
    52: {"goal": 'УД1', "goal_name": "Первый этап углубленной диспансеризации определенных групп взрослого населения",
         "date_start": "2020-01-01", "date_end": None},
    53: {"goal": 'УД2', "goal_name": "Второй этап углубленной диспансеризации определенных групп взрослого населения",
         "date_start": "2020-01-01", "date_end": None},
    54: {"goal": 'ДР1', "goal_name": "Первый этап диспансеризации для оценки репродуктивного здоровья",
         "date_start": "2020-01-01", "date_end": None},
    55: {"goal": 'ДР2', "goal_name": "Второй этап диспансеризации для оценки репродуктивного здоровья",
         "date_start": "2020-01-01", "date_end": None},
    56: {"goal": 'ПН1', "goal_name": "Первый этап профилактического медицинского осмотра несовершеннолетних",
         "date_start": "2020-01-01", "date_end": None},
    57: {"goal": 'ДС1',
         "goal_name": "Первый этап диспансеризации пребывающих в стационарных учреждениях детей-сирот и детей, находящихся в трудной жизненной ситуации",
         "date_start": "2020-01-01", "date_end": None},
    58: {"goal": 'ДС2',
         "goal_name": "Первый этап диспансеризации детей-сирот и детей, оставшихся без попечения родителей, в том числе усыновленных (удочеренных), принятых под опеку (попечительство) в приемную или патронатную семью",
         "date_start": "2020-01-01", "date_end": None},
    59: {"goal": 'В дневном стационаре', "goal_name": "В дневном стационаре", "date_start": "2020-01-01", "date_end": None},
    60: {"goal": 'На дому', "goal_name": "На дому", "date_start": "2020-01-01", "date_end": None},
    61: {"goal": 'Стационарно', "goal_name": "Стационарно", "date_start": "2020-01-01", "date_end": None},
    62: {"goal": 'Стоматология', "goal_name": "Стоматология", "date_start": "2020-01-01", "date_end": None},
}


class Goal(models.Model):
    """
    Модель целей
    """
    id_goal = models.PositiveIntegerField(primary_key=True, verbose_name="ID цели")
    goal = models.CharField(max_length=200, verbose_name="Цель")
    goal_name = models.TextField(verbose_name="Название цели")
    date_start = models.DateField(verbose_name="Дата начала", null=True, blank=True)
    date_end = models.DateField(verbose_name="Дата окончания", null=True, blank=True)

    class Meta:
        verbose_name = "Цель"
        verbose_name_plural = "Цели"

    def __str__(self):
        return f"{self.id_goal} - {self.goal} - {self.goal_name}"

    @staticmethod
    def populate_from_dict(data):
        """
        Метод для синхронизации таблицы с данными из словаря
        """
        # Получить все существующие данные
        existing_records = {
            record.id_goal: {
                "goal": record.goal,
                "goal_name": record.goal_name,
                "date_start": record.date_start.isoformat() if record.date_start else None,
                "date_end": record.date_end.isoformat() if record.date_end else None,
            }
            for record in Goal.objects.all()
        }

        # Проверить, отличаются ли данные
        if existing_records == data:
            return

        # Если данные отличаются, удалить старые и записать новые
        Goal.objects.all().delete()
        for id_goal, details in data.items():
            date_start = (
                datetime.strptime(details["date_start"], "%Y-%m-%d").date()
                if details["date_start"]
                else None
            )
            date_end = (
                datetime.strptime(details["date_end"], "%Y-%m-%d").date()
                if details["date_end"]
                else None
            )
            Goal.objects.create(
                id_goal=id_goal,
                goal=details["goal"],
                goal_name=details["goal_name"],
                date_start=date_start,
                date_end=date_end,
            )
        print("Таблица Goal синхронизирована с словарем!")
