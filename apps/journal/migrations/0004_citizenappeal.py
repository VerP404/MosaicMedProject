# Generated by Django 5.1 on 2025-03-10 09:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('journal', '0003_questioncode'),
    ]

    operations = [
        migrations.CreateModel(
            name='CitizenAppeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_pp', models.IntegerField(help_text='Порядковый номер в журнале', unique_for_year=True, verbose_name='№ п/п')),
                ('registration_date', models.DateField(editable=False, verbose_name='Дата регистрации в учреждении')),
                ('institution_registration_number', models.CharField(help_text='регистрационный № обращения учреждения', max_length=100, unique=True, verbose_name='Рег. № обращения учреждения')),
                ('source', models.CharField(blank=True, choices=[('mz_vo', 'МЗ ВО'), ('zayavitel', 'От заявителя')], max_length=20, verbose_name='Источник поступления')),
                ('dzvo_cover_letter_reg_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Рег. № сопроводительного письма ДЗ ВО')),
                ('dzvo_cover_letter_date', models.DateField(blank=True, null=True, verbose_name='Дата сопроводительного письма ДЗ ВО к обращению')),
                ('appeal_type', models.CharField(blank=True, choices=[('blagodarnost', 'Благодарность'), ('zhaloba', 'Жалоба'), ('zayavlenie', 'Заявление')], max_length=20, verbose_name='Вид обращения')),
                ('frequency', models.CharField(blank=True, choices=[('pervichnoe', 'Первичное'), ('povtornoe', 'Повторное'), ('neodnokratnoe', 'Неоднократное')], max_length=20, verbose_name='Кратность поступления')),
                ('retrieved_by_commission', models.BooleanField(default=False, verbose_name='Проверено комиссионно')),
                ('retrieved_on_place', models.BooleanField(default=False, verbose_name='Проверено с выездом на место')),
                ('retrieved_with_applicant', models.BooleanField(default=False, verbose_name='Рассмотрено с участием заявителя ')),
                ('supported_measures_taken', models.BooleanField(default=False, verbose_name='поддержано, меры приняты')),
                ('supported_measures_taken_rebuke', models.BooleanField(default=False, verbose_name='поддержано, меры приняты: выговор')),
                ('supported_measures_taken_comment', models.BooleanField(default=False, verbose_name='поддержано, меры приняты: замечание')),
                ('supported_measures_taken_deprivation_payments', models.BooleanField(default=False, verbose_name='поддержано, меры приняты: лишение стимулирующих выплат')),
                ('supported_measures_taken_holding_meeting', models.BooleanField(default=False, verbose_name='поддержано, меры приняты: проведение совещания')),
                ('supported_measures_taken_other', models.BooleanField(default=False, verbose_name='поддержано, меры приняты: иное')),
                ('supported_without_measures', models.BooleanField(default=False, verbose_name='поддержано без принятия мер')),
                ('explained', models.BooleanField(default=False, verbose_name='Разъяснено')),
                ('not_supported', models.BooleanField(default=False, verbose_name='Не поддержано')),
                ('answer_author', models.BooleanField(default=False, verbose_name='Дан ответ автору')),
                ('Left_unanswered_author', models.BooleanField(default=False, verbose_name='Оставлено без ответа автору')),
                ('directed_by_competence', models.BooleanField(default=False, verbose_name='Направлено по компетенции')),
                ('term_consideration_extended', models.BooleanField(default=False, verbose_name='Срок рассмотрения продлен')),
                ('answer_signed_head', models.BooleanField(default=False, verbose_name='Ответ подписан руководителем ')),
                ('answer_signed_deputy_head', models.BooleanField(default=False, verbose_name='Ответ подписан заместителем руководителя')),
                ('in_writing', models.BooleanField(default=False, verbose_name='В письменной форме')),
                ('in_electronic_document', models.BooleanField(default=False, verbose_name='В форме электронного документа')),
                ('article_eight_closed', models.DateField(blank=True, default=False, null=True, verbose_name='Статья 8: закрыто (дата)')),
                ('article_eight_until', models.DateField(blank=True, default=False, null=True, verbose_name='Статья 8: находится в работе (до)')),
                ('article_ten_closed', models.DateField(blank=True, default=False, null=True, verbose_name='Статья 10: закрыто (дата)')),
                ('article_ten_until', models.DateField(blank=True, default=False, null=True, verbose_name='Статья 10: находится в работе (до)')),
                ('received_institution_closed', models.DateField(blank=True, default=False, null=True, verbose_name='Поступившее в учреждение: закрыто (дата)')),
                ('received_institution_until', models.DateField(blank=True, default=False, null=True, verbose_name='Поступившее в учреждение: находится в работе (до)')),
                ('appeal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='journal.appeal', verbose_name='Обращение')),
                ('question_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='journal.questioncode', verbose_name='Код вопроса')),
            ],
            options={
                'verbose_name': 'Запись журнала',
                'verbose_name_plural': 'Журнал обращений',
            },
        ),
    ]
